name: Deploy to EC2

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Copy entire project to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."  # 전체 프로젝트 디렉토리 복사
          target: "~/TheDayOfToday-BE"

      - name: Run Blue-Green Deployment on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/TheDayOfToday-BE

            # Step 1: Build new container with a new tag (무조건 새로 build)
            docker build --no-cache -t thedayoftoday-app:latest .

            # Step 2: Run new container with a different name
            docker run -d --name app_v1_new -p 8080:8080 thedayoftoday-app

            # Step 3: Swap Nginx configuration (이미 설정되어 있다면 스킵 가능)
            sudo ln -sf /etc/nginx/sites-available/thedayoftoday-v1 /etc/nginx/sites-enabled/
            sudo systemctl reload nginx

            # Step 4: Stop and remove old container
            docker stop app_v1 || true
            docker rm app_v1 || true

            # Step 5: Rename new container to the original name
            docker rename app_v1_new app_v1
