name: Deploy to EC2

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          echo "빌드된 JAR 파일 목록:"
          ls -lh build/libs

      - name: Set fixed JAR path
        id: get_jar
        shell: bash
        run: |
          JAR=build/libs/thedayoftoday-0.0.1-SNAPSHOT.jar
          if [ ! -f "$JAR" ]; then
            echo "ERROR: JAR not found at $JAR"
            ls -l build/libs
            exit 1
          fi
          echo "jar_name=$JAR"
          echo "jar_name=$JAR" >> $GITHUB_OUTPUT

      - name: Check file existence
        run: |
          ls -l ${{ steps.get_jar.outputs.jar_name }} || (echo "JAR not found" && exit 1)
          ls -l Dockerfile || (echo "Dockerfile not found" && exit 1)

      - name: Copy JAR & Dockerfile to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            ${{ steps.get_jar.outputs.jar_name }}
            Dockerfile
          target: ~/TheDayOfToday-BE

      - name: Run Blue-Green Deployment on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/TheDayOfToday-BE

            echo "${{ secrets.APP_PROPS }}" > application.properties
            echo "${{ secrets.APP_JWT_PROPS }}" > application-jwt.properties

            docker stop app_v2 || true
            docker rm app_v2 || true

            docker build --no-cache -t thedayoftoday-app .

            nohup docker run -d --name app_v2 \
              -p 8081:8080 \
              -v $(pwd)/application.properties:/app/application.properties \
              -v $(pwd)/application-jwt.properties:/app/application-jwt.properties \
              thedayoftoday-app > app.log 2>&1 &

            sleep 5
            docker ps | grep app_v2 || (docker logs app_v2 && exit 1)

            sudo ln -sf /etc/nginx/sites-available/thedayoftoday-v2 /etc/nginx/sites-enabled/default
            sudo systemctl reload nginx

            docker stop app_v1 || true
            docker rm app_v1 || true

            docker rename app_v2 app_v1
