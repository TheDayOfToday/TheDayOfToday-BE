name: Deploy to EC2

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
      - name: Check built files
        run: ls -lh build/libs

      - name: Get built JAR file name
        id: jar
        run: |
          echo "JAR_NAME=$(ls build/libs/*.jar | grep -v plain | head -n 1)" >> $GITHUB_ENV
      - name: Copy project & Dockerfile to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            ${{ steps.get_jar.outputs.JAR_NAME }}
            Dockerfile
          target: ~/TheDayOfToday-BE

      - name: Run Blue-Green Deployment on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/TheDayOfToday-BE
            echo "${{ secrets.APP_PROPS }}" > application.properties
            echo "${{ secrets.APP_JWT_PROPS }}" > application-jwt.properties
            echo "🧹 기존 app_v2 컨테이너 정리 중..."
            docker stop app_v2 || true
            docker rm app_v2 || true
            echo "🐳 Docker 이미지 빌드 중..."
            docker build --no-cache -t thedayoftoday-app . 
            echo "🚀 새로운 app_v2 컨테이너 실행 중..."
            docker run -d --name app_v2 \
              -p 8081:8080 \
              -v $(pwd)/application.properties:/app/application.properties \
              -v $(pwd)/application-jwt.properties:/app/application-jwt.properties \
              thedayoftoday-app || (echo '❌ 컨테이너 실행 실패!' && exit 1)
            echo "🔁 Nginx 설정을 app_v2로 변경 중..."
            sudo ln -sf /etc/nginx/sites-available/thedayoftoday-v2 /etc/nginx/sites-enabled/
            sudo systemctl reload nginx
            echo "🧼 기존 app_v1 컨테이너 정리 중..."
            docker stop app_v1 || true
            docker rm app_v1 || true
            echo "🔄 app_v2 → app_v1 이름 변경 중..."
            docker rename app_v2 app_v1
            echo "✅ 배포 완료!"
